#include "./header/stdafx.h"
#include "./header/QResultEvaluate.h"

// 
double QResultEvaluate::m_pFemaleStandard[71*4] = 
{854.979172,978.8883553,1113.270719,1247.43196,
854.4766202,982.0041768,1116.366438,1251.954927,
854.0946808,985.1803044,1119.48226,1256.377383,
854.2353953,988.3966363,1122.638286,1260.639023,
854.2353953,991.4722536,1125.854617,1264.639335,
854.979172,994.8896061,1129.17146,1268.338117,
856.326011,997.9049172,1132.608914,1271.735367,
858.2558101,1000.618697,1136.187083,1274.871291,
860.7484672,1003.191763,1139.926069,1277.745887,
863.7436762,1005.825134,1143.866076,1280.419463,
867.221335,1008.639425,1148.007103,1282.932223,
871.1412394,1011.514021,1152.389355,1285.344471,
875.4631853,1014.268005,1157.032934,1288.058251,
880.1469685,1016.901377,1161.957942,1291.556012,
885.1523849,1020.117709,1167.164379,1296.320204,
890.4392303,1024.841696,1172.712552,1302.612153,
896.0075048,1031.716605,1178.582357,1310.110226,
901.8773103,1040.179579,1184.814,1318.512893,
908.1290553,1049.125001,1191.427582,1327.639235,
914.843148,1057.728689,1198.443206,1337.428945,
922.0798946,1065.849927,1205.921178,1347.861921,
929.9197034,1074.473717,1213.941905,1358.89796,
938.4228806,1083.278425,1222.545593,1370.53706,
947.3884056,1092.465073,1231.852853,1382.718917,
956.6353595,1102.093966,1241.944094,1395.463632,
965.9225177,1112.084697,1252.899724,1408.851613,
975.0488592,1122.477469,1264.88056,1422.963269,
983.8334655,1133.211976,1277.987112,1437.89911,
992.3567448,1144.308321,1292.420401,1453.759646,
1000.699105,1155.746401,1308.341244,1470.645388,
1009.001262,1167.506114,1326.031069,1488.656846,
1017.343623,1179.587461,1341.288543,1507.593,
1025.8468,1191.930134,1356.566119,1527.17242,
1034.5711,1204.594441,1371.823593,1547.053371,
1043.516523,1217.560278,1387.101169,1566.934322,
1052.763477,1230.928157,1402.358643,1586.433334,
1062.332064,1244.758384,1417.636219,1605.248875,
1072.28259,1259.091163,1432.893694,1623.179925,
1082.655261,1273.564656,1448.17127,1640.507912,
1093.490278,1288.058251,1463.428744,1657.554471,
1104.868052,1302.330724,1478.70632,1674.580928,
1116.969501,1316.502686,1495.712674,1691.929017,
1130.015747,1330.714852,1515.091074,1709.739455,
1144.248015,1345.188345,1535.856516,1728.193159,
1159.867326,1360.104084,1556.923489,1747.511252,
1176.612354,1375.642987,1577.910054,1767.914857,
1194.02075,1392.066382,1598.635293,1789.6653,
1211.610064,1409.615492,1618.878081,1813.164625,
1228.857644,1428.330523,1638.698726,1838.875177,
1245.401651,1447.950147,1658.8008,1866.997979,
1261.322493,1468.152731,1680.1291,1895.924863,
1276.740784,1488.636744,1703.548016,1923.585317,
1291.857543,1509.160962,1728.655506,1949.677808,
1306.813486,1529.504261,1754.466569,1974.765197,
1321.648817,1549.586232,1779.895693,1999.12891,
1336.60476,1569.406877,1803.917671,2023.010174,
1351.781825,1589.066705,1825.989748,2046.630111,
1367.320729,1608.565717,1846.634578,2070.189741,
1383.402388,1628.004422,1866.495427,2093.869984,
1400.167517,1647.382822,1886.155255,2117.912065,
1417.797036,1666.801425,1906.116614,2142.517003,
1436.471863,1686.260233,1926.82175,2167.88582,
1456.051283,1705.839652,1948.250561,2194.199435,
1476.294071,1725.579889,1970.202026,2221.538255,
1496.959003,1745.541248,1992.495226,2249.701261,
1517.804854,1765.743833,2014.92914,2276.919469,
1538.530092,1786.247948,2037.262544,2301.84604,
1558.853288,1806.973186,2059.394928,2325.285059,
1578.553321,1827.899445,2081.607719,2348.342137,
1597.489474,1848.926214,2104.242654,2371.982176,
1615.822566,1870.033392,2127.721877,2397.069564};

double QResultEvaluate::m_pMaleStandard[71*4] = 
{1005.596624,1148.022404,1283.435676,1425.47295,
1009.44282,1149.226768,1285.863829,1429.513398,
1011.734997,1149.226768,1287.107044,1432.213505,
1013.347291,1149.226768,1288.369684,1434.680509,
1014.027174,1151.149866,1289.690599,1436.797859,
1012.745109,1149.926076,1289.865426,1437.264064,
1012.45373,1149.926076,1291.322319,1438.62383,
1012.45373,1150.839062,1292.895762,1439.808769,
1012.45373,1152.431931,1294.585757,1440.935433,
1012.45373,1154.393879,1296.411729,1442.178647,
1012.45373,1156.433528,1298.393102,1443.67439,
1012.45373,1158.220649,1300.549302,1445.539212,
1012.45373,1159.463864,1302.88033,1447.753688,
1014.027174,1159.813518,1305.425035,1450.356669,
1016.008547,1159.366738,1308.183417,1453.270453,
1017.13521,1159.813518,1311.174903,1456.533892,
1017.154636,1162.649601,1314.438341,1460.24411,
1019.971294,1166.612348,1317.973733,1464.498236,
1024.34197,1170.18659,1321.761652,1469.451669,
1027.72196,1173.372328,1325.840951,1475.143261,
1030.033562,1176.53864,1330.231052,1481.41761,
1031.393329,1179.666102,1334.912533,1488.022188,
1031.393329,1182.657587,1339.904816,1494.723892,
1031.393329,1185.396544,1345.207904,1501.309045,
1031.568156,1188.038376,1350.860646,1507.855347,
1035.317225,1191.573767,1356.863041,1514.498775,
1041.28077,1196.935131,1363.215091,1521.355881,
1048.0796,1203.831087,1369.93622,1528.582066,
1054.703603,1211.542903,1377.026429,1536.293882,
1060.705999,1219.448971,1384.524568,1544.666156,
1066.669544,1227.219063,1392.450061,1553.796014,
1073.507225,1234.6395,1400.783484,1563.450352,
1081.277317,1241.593732,1409.544263,1573.260093,
1086.794082,1248.489688,1418.732396,1582.75903,
1090.737403,1255.832425,1428.367309,1591.908313,
1099.556457,1264.049297,1438.429578,1601.912306,
1110.104357,1273.101454,1448.938627,1614.59698,
1116.203879,1282.833493,1459.913881,1631.788308,
1120.807658,1293.090014,1471.316491,1651.873995,
1127.431661,1303.599063,1483.185306,1671.3575,
1135.046351,1313.972136,1495.500901,1687.868944,
1141.534377,1323.956703,1508.302127,1702.74867,
1146.779189,1334.154949,1521.569559,1717.783797,
1152.043426,1344.877675,1535.264345,1734.120415,
1157.773869,1356.086032,1549.425337,1751.952775,
1164.223045,1367.760595,1563.994259,1771.280878,
1171.643482,1379.881938,1578.990536,1791.774495,
1180.345985,1392.430636,1594.375317,1812.773167,
1190.485954,1405.328988,1610.168028,1833.577588,
1201.422358,1418.518718,1626.329819,1853.6827,
1212.300487,1431.863851,1642.841264,1873.243905,
1222.226779,1445.306109,1659.721788,1892.669134,
1230.968132,1458.709517,1677.010241,1912.269191,
1239.126728,1471.976949,1694.6872,1932.413153,
1247.38245,1485.283231,1712.810939,1953.508952,
1256.356906,1498.861466,1731.362032,1975.964517,
1266.594002,1512.983607,1750.398757,1999.740997,
1277.996611,1527.824482,1769.901687,2024.080809,
1290.17623,1543.34524,1789.851397,2048.187518,
1302.763778,1559.351629,1810.247888,2071.439517,
1315.506729,1575.707672,1831.071733,2094.011634,
1328.618758,1592.199691,1852.284083,2116.272946,
1342.449521,1608.672286,1873.904363,2138.534259,
1357.387523,1624.950628,1895.874297,2161.106375,
1372.597477,1641.073568,1918.096759,2184.358374,
1386.117436,1657.157657,1940.066693,2208.678761,
1397.733723,1673.241747,1961.240193,2234.184086,
1408.359324,1689.403538,1981.131628,2259.94194,
1418.868372,1705.75958,1999.294217,2284.611981,
1430.640061,1722.348726,2015.475432,2307.145247,
1446.529899,1739.404077,2029.539298,2326.92013
};

QResultEvaluate::QResultEvaluate()
{
}

QResultEvaluate::~QResultEvaluate()
{
}

QString  QResultEvaluate::getEvaluate(const int &nAge, const double &nLeftABI, const double &nRightABI, const double &dLeftPWV,  const double &dRightPWV, bool bIsMale) const
{
	int nStatus = 0;
	QString strEvaluate = getABIEvaluate(nLeftABI, nRightABI, nStatus);
	switch(nStatus)
	{
	case 0:
		strEvaluate.append("\n"+QString::fromLocal8Bit("血管硬度(baPWV):怀疑因为血管的堵塞而不能评价血管的硬度。"));
		break;
	case 1:
		strEvaluate.append("\n" + QString::fromLocal8Bit("血管硬度(baPWV):怀疑因为血管的钙化而不能评价血管的硬度。"));
		break;
	case 2:
		strEvaluate.append("\n"+getPWVEvaluate(nAge, dLeftPWV,  dRightPWV, bIsMale));
		break;
	default:
		break;
	}

	return strEvaluate;
}

QString QResultEvaluate::getABIEvaluate(const double &nLeftABI, const double &nRightABI,int &nABIStatus) const
{
	QString strABIEvaluate = QString::fromLocal8Bit("下肢血管堵塞(ABI):");
	// 堵塞
	if(nLeftABI < 0.9 || nRightABI < 0.9)
	{
		strABIEvaluate += QString::fromLocal8Bit("怀疑下肢血管堵塞。可能是胆固醇等在血管壁上沉积，妨碍血液流动。");
		nABIStatus = 0;
	}
	// 钙化
	else if(nLeftABI > 1.4 || nRightABI > 1.4)
	{
		strABIEvaluate += QString::fromLocal8Bit("怀疑下肢血管钙化。");
		nABIStatus = 1;
	}
	else
	{
		strABIEvaluate += QString::fromLocal8Bit("正常范围内。");
		nABIStatus = 2;
	}

	return strABIEvaluate;
}

QString QResultEvaluate::getPWVEvaluate(const int &nAge, const double &dLeftPWV,  const double &dRightPWV,bool bIsMale) const
{
	QString strABIEvaluate = QString::fromLocal8Bit("血管硬度(baPWV):");
	int nValueIndex = 0;
	if(nAge>=20 && nAge<=90)
	{
		nValueIndex += nAge - 20;
	}
	else if(nAge>90)
	{
		nValueIndex = 70;
	}

	double *pStantard = m_pMaleStandard;
	if(!bIsMale)
	{
		pStantard = m_pFemaleStandard;
	}

	// 取得-1SD、均值、1SD、2SD的值
	double dN1SDPWV = pStantard[nValueIndex*4];
	double dAverage = pStantard[nValueIndex*4+1];
	double dP1SDPWV = pStantard[nValueIndex*4+2];
	double dP2SDPWV = pStantard[nValueIndex*4+3];

	double dMaxPWV = qMax(dLeftPWV, dRightPWV);
	if(dMaxPWV < dN1SDPWV)
	{
		strABIEvaluate += QString::fromLocal8Bit("柔软。");
	}
	else if(dN1SDPWV<=dMaxPWV && dMaxPWV < dP1SDPWV)
	{
		strABIEvaluate += QString::fromLocal8Bit("正常。");
	}
	else if(dMaxPWV>=dP1SDPWV && dMaxPWV<dP2SDPWV)
	{
		strABIEvaluate += QString::fromLocal8Bit("稍硬。");
	}
	else 
	{
		strABIEvaluate += QString::fromLocal8Bit("硬。");
	}
	return strABIEvaluate;
}

QString QResultEvaluate::getDescription() const
{
	QString strDescription = QString::fromLocal8Bit("*ABI主要是评价腰以下到脚踝之间血管的阻塞程度的指标。\n");
	strDescription += QString::fromLocal8Bit("*baPWV主要是评价大血管硬度的参数，不直接表示脑、心血管等的硬度。");
	return strDescription;
}

void QResultEvaluate::getPWVByAgeAndSex(const int &nAge, const bool bIsMale, double &dN1SDPWV, double &dAveragePWV,double &dP1SDPWV,double &dP2SDPWV) const
{
	int nValueIndex = 0;
	if(nAge>=20 && nAge<=90)
	{
		nValueIndex += nAge - 20;
	}
	else if(nAge>90)
	{
		nValueIndex = 70;
	}

	double *pStantard = m_pMaleStandard;
	if(!bIsMale)
	{
		pStantard = m_pFemaleStandard;
	}

	// 取得-1SD、均值、1SD、2SD的值
	dN1SDPWV = pStantard[nValueIndex*4];
	dAveragePWV = pStantard[nValueIndex*4 + 1];
	dP1SDPWV = pStantard[nValueIndex*4 + 2];
	dP2SDPWV = pStantard[nValueIndex*4 + 3];
}
